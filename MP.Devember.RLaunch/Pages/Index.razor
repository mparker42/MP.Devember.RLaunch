@page "/"
@using System.Text.Json
@using System.Text.Json.Serialization

@if (!Loading)
{
    <PageTitle>@TS.SafeGet("siteTabTitle")</PageTitle>

    <MudContainer MaxWidth="MaxWidth.Medium">
        <h1>@TokenSummary.Title</h1>

        <div class="memePicWrapper">
            <img src="@TokenSummary.Image" class="memePic" alt="@TS.SafeGet("memeAltText")" />
        </div>

        <hr>

        <h2>@TS.SafeGet("aboutTitle")</h2>
        <p>
            @TS.SafeGet("aboutLineOne")
            <br>
            @TS.SafeGet("aboutLineTwo")
            <br>
            @TS.SafeGet("aboutLineThree")
        </p>

        <hr>

        <h2>@TS.SafeGet("tokenDescriptionTitle")</h2>
        <p>@(TokenSummary?.Description?.Replace("<p>", "")?.Replace("</p>", "") ?? @TS.SafeGet("tokenDescriptionMissing"))</p>

        <hr>

        <h2>@TS.SafeGet("blockchainHistoryTitle")</h2>
        @if (TokenSummary?.TokenTransactions?.Any() ?? false)
        {
            var i = 1;
            foreach (var transaction in TokenSummary.TokenTransactions)
            {
                <div>
                    <MudCard>
                        <h3>@(string.Format(TS.SafeGet("transactionTitle"), i++))</h3>
                        <hr>
                        <MudChip Icon="@(@transaction?.From?.IsVerified ?? false ? Icons.Material.Filled.VerifiedUser : null)" Color="Color.Secondary">@transaction?.From?.Name</MudChip>
                        🡆
                        <MudChip Icon="@(@transaction?.To?.IsVerified ?? false ? Icons.Material.Filled.VerifiedUser : null)" Color="Color.Primary">@transaction?.To?.Name</MudChip>
                    </MudCard>
                </div>
                <br />
            }
        }
        else
        {
            <MudCard>
                @TS.SafeGet("noTransactions")
            </MudCard>
        }

        <hr>

        <h2>@TS.SafeGet("validationInfoTitle")</h2>

        <p>@TS.SafeGet("validationInfoPreface")</p>
        <code>
            @JsonSerializer.Serialize(
                TokenSummary,
                new JsonSerializerOptions
                {
                    WriteIndented = true,
                    Converters =
                    {
                        new JsonStringEnumConverter()
                    }
                }
            )
        </code>
    </MudContainer>
}